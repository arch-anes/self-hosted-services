---
apiVersion: v1
kind: Service
metadata:
  name: speedtest
  namespace: default
spec:
  ports:
    - protocol: TCP
      name: web
      port: 80
  selector:
    app: speedtest

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: speedtest
  namespace: default
spec:
  entryPoints:
    - web
    - websecure
  routes:
    - match: Host(`speedtest.${DOMAIN_NAME}`)
      kind: Rule
      services:
        - name: speedtest
          port: 80
  tls:
    secretName: wilcard-main-domain-tls

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: speedtest
  namespace: default
  labels:
    app: speedtest
  annotations:
    keel.sh/policy: minor
    keel.sh/trigger: poll
    keel.sh/pollSchedule: "@weekly"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: speedtest
  template:
    metadata:
      labels:
        app: speedtest
    spec:
      affinity:
        nodeAffinity:
          # Only on public nodes
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: public
                    operator: In
                    values:
                      - "true"
      containers:
        - name: app
          image: ghcr.io/alexjustesen/speedtest-tracker
          resources:
            requests:
              memory: "64Mi"
              cpu: "0.25"
            limits:
              memory: "256Mi"
              cpu: "1.00"
          ports:
            - name: web
              containerPort: 80
          env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: DB_CONNECTION
              value: pgsql
            - name: DB_HOST
              value: postgresql
            - name: DB_PORT
              value: "5432"
            - name: DB_DATABASE
              value: speedtest_tracker
            - name: DB_USERNAME
              value: postgres
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgresql
                  key: postgres_password
