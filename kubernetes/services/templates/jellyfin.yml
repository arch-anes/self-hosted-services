---
apiVersion: v1
kind: Service
metadata:
  name: jellyfin
  namespace: default
spec:
  ports:
    - protocol: TCP
      name: web
      port: 8096
  selector:
    app: jellyfin

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jellyfin
  namespace: default
spec:
  tls:
    - hosts:
        - jellyfin.{{ .Values.fqdn }}
      secretName: {{ .Values.fqdn }}-tls
  rules:
    - host: jellyfin.{{ .Values.fqdn }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: jellyfin
                port:
                  name: web

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jellyfin
  namespace: default
  labels:
    app: jellyfin
  annotations:
    keel.sh/policy: force
    keel.sh/matchTag: "true"
    keel.sh/trigger: poll
    keel.sh/pollSchedule: "@daily"
spec:
  replicas: 1
  strategy:
    # This is done to ensure GPU is freed before creating new container
    # otherwise deployment is pending
    type: Recreate
  selector:
    matchLabels:
      app: jellyfin
  template:
    metadata:
      labels:
        app: jellyfin
    spec:
      affinity:
        nodeAffinity:
          # Only on NAS nodes
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: nas
                    operator: In
                    values:
                      - "true"
      containers:
        - name: app
          image: jellyfin/jellyfin:latest
          startupProbe:
            httpGet:
              path: /health
              port: 8096
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 5
          resources:
            requests:
              memory: 512Mi
              cpu: 250m
            limits:
              memory: 2Gi
              cpu: 1000m
              amd.com/gpu: 1
          ports:
            - name: web
              containerPort: 8096
          volumeMounts:
            - name: config
              mountPath: /config
            - name: media
              mountPath: /media
      volumes:
        - name: config
          hostPath:
            path: /storage/jellyfin/config
        - name: media
          hostPath:
            path: /storage/Multimedia
