---
apiVersion: v1
kind: Service
metadata:
  name: postgresql
  namespace: default
spec:
  ports:
    - protocol: TCP
      name: db
      port: 5432
  selector:
    app: postgresql

---
apiVersion: v1
kind: Secret
metadata:
  name: postgresql
  namespace: default
type: Opaque
# stringData:
#   postgres_password: "somepassword"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgresql-scripts
  namespace: default
data:
  create-multiple-postgresql-databases.sh: |
    #!/bin/bash

    set -e
    set -u

    function create_user_and_database() {
      local database=$1
      echo "  Creating user and database '$database'"
      psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" <<-EOSQL
          CREATE USER $database;
          CREATE DATABASE $database;
          GRANT ALL PRIVILEGES ON DATABASE $database TO $database;
    EOSQL
    }

    if [ -n "$POSTGRES_MULTIPLE_DATABASES" ]; then
      echo "Multiple database creation requested: $POSTGRES_MULTIPLE_DATABASES"
      for db in $(echo $POSTGRES_MULTIPLE_DATABASES | tr ',' ' '); do
        create_user_and_database $db
      done
      echo "Multiple databases created"
    fi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql
  namespace: default
  labels:
    app: postgresql
  annotations:
    keel.sh/policy: minor
    keel.sh/trigger: poll
    keel.sh/pollSchedule: "@weekly"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      affinity:
        nodeAffinity:
          # Only on NAS nodes
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: nas
                    operator: In
                    values:
                      - "true"
      containers:
        - name: db
          image: postgres:12-alpine
          resources:
            requests:
              memory: "128Mi"
              cpu: "0.25"
            limits:
              memory: "2048Mi"
              cpu: "3.0"
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgresql
                  key: postgres_password
            - name: POSTGRES_MULTIPLE_DATABASES
              value: "gotify,huginn,n8n,nextcloud,ttrss"
          ports:
            - name: db
              containerPort: 5432
          volumeMounts:
            - name: db
              mountPath: /var/lib/postgresql/data
            - name: scripts
              mountPath: /docker-entrypoint-initdb.d/create-multiple-postgresql-databases.sh
              subPath: create-multiple-postgresql-databases.sh
      volumes:
        - name: db
          hostPath:
            path: /storage/postgresql
        - name: scripts
          configMap:
            name: postgresql-scripts
            defaultMode: 0744
