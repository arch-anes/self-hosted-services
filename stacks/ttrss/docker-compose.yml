version: "3"

services:
  db:
    image: postgres:12-alpine
    networks:
      - internal
    volumes:
      - ${STORAGE_LOCATION}/ttrss/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_DB=ttrss
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    deploy:
      placement:
        constraints:
          - node.labels.big==true

  # if `ERROR: relation "ttrss_version" does not exist`, then
  # execute https://git.tt-rss.org/fox/tt-rss/raw/master/schema/ttrss_schema_pgsql.sql manually
  app:
    image: wangqiru/ttrss
    stdin_open: true
    tty: true
    command: sh -c 'sh /wait-for.sh $$DB_HOST:$$DB_PORT -- php /configure-db.php && exec s6-svscan /etc/s6/'
    networks:
      - reverse_proxy
      - internal
    depends_on:
      - db
    environment:
      - SELF_URL_PATH=https://ttrss.${DOMAIN_NAME}/
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=ttrss
      - DB_USER=postgres
      - DB_PASS=${POSTGRES_PASSWORD}
      - ENABLE_PLUGINS=api_feedreader,auth_internal,fever
      - FEED_LOG_QUIET=true
    deploy:
      placement:
        constraints:
          - node.labels.big==true
      labels:
        - traefik.enable=true
        - traefik.http.routers.ttrss.rule=Host(`ttrss.${DOMAIN_NAME}`)
        - traefik.http.routers.ttrss.tls.certresolver=leresolver
        - traefik.http.routers.ttrss.entrypoints=websecure
        - traefik.http.services.ttrss.loadbalancer.server.port=80

networks:
  internal:
    internal: true
  reverse_proxy:
    external: true
