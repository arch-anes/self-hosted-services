{{- if and (not .Values.disableAllApplications) .Values.applications.prowlarr.enabled }}
{{- if not .Values.applications.postgresql.enabled }}
{{- fail "Prowlarr requires PostgreSQL to be enabled. Please enable PostgreSQL in your values.yaml" }}
{{- end }}
{{- if not .Values.applications.gluetun.enabled }}
{{- fail "Prowlarr requires gluetun to be enabled. Please enable gluetun in your values.yaml" }}
{{- end }}
# ---
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: prowlarr-custom-definitions
#   namespace: "{{ .Values.applicationsNamespace }}"
# data:
  # indexer1.yml: |-
  #   example content

---
apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: prowlarr
  namespace: "{{ .Values.applicationsNamespace }}"
spec:
  chart: oci://oci.trueforge.org/truecharts/prowlarr
  version: 20.6.3
  targetNamespace: "{{ .Values.applicationsNamespace }}"
  valuesContent: |-
    {{- include "tunnel.truecharts.image" . | nindent 4 }}
    workload:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        podSpec:
          containers:
            {{- include "tunnel.truecharts.container" . | nindent 12 }}
            main:
              env:
                PROWLARR__APP__THEME: dark
                PROWLARR__AUTH__METHOD: Forms
                PROWLARR__AUTH__REQUIRED: Enabled
                PROWLARR__POSTGRES__HOST: postgresql-primary
                PROWLARR__POSTGRES__PORT: "5432"
                PROWLARR__POSTGRES__MAINDB: prowlarr_main
                PROWLARR__POSTGRES__LOGDB: prowlarr_log
                PROWLARR__POSTGRES__USER: prowlarr
                PROWLARR__AUTH__APIKEY:
                  secretKeyRef:
                    name: arr
                    key: prowlarr_api_key
                    expandObjectName: false
                PROWLARR__POSTGRES__PASSWORD:
                  secretKeyRef:
                    name: postgresql-pguser-prowlarr
                    key: password
                    expandObjectName: false
            exportarr:
              env:
                API_KEY:
                  secretKeyRef:
                    name: arr
                    key: prowlarr_api_key
                    expandObjectName: false
    resources:
      requests:
        memory: 256Mi
        cpu: 250m
      limits:
        memory: 1Gi
        cpu: null
    global:
      traefik:
        fixedMiddlewares: []
    ingress:
      main:
        enabled: true
        annotations:    
          homer.service.name: Arr
          homer.item.logo: "https://raw.githubusercontent.com/Prowlarr/Prowlarr/bc53fab96623c91783360cd9d3abce12e6c4f38a/Logo/256.png"
        hosts:
          - host: prowlarr.{{ .Values.fqdn }}
            paths:
              - path: /
        tls:
          - secretName: "{{ .Values.fqdn }}-tls"
            hosts:
              - prowlarr.{{ .Values.fqdn }}
    persistence:
      config:
        type: emptyDir
      custom-definitions:
        enabled: true
        type: configmap
        mountPath: /config/Definitions/Custom/
        objectName: prowlarr-custom-definitions
        expandObjectName: false
        defaultMode: "0444"
    metrics:
      main:
        enabled: {{ and (not .Values.disableAllApplications) .Values.applications.prometheus.enabled }}
        endpoints:
          - port: metrics
            path: /metrics
            relabelings:
              - action: replace
                # Stable “instance” = app.kubernetes.io/instance (radarr|sonarr|prowlarr|bazarr)
                sourceLabels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_label_app_kubernetes_io_instance]
                separator: ":"
                replacement: "$1$2"
                targetLabel: instance
{{- end }}
