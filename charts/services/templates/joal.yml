{{- if .Values.applications.joal.enabled }}
{{- if not .Values.applications.redis.enabled }}
{{- fail "Joal requires Gluetun to be enabled. Please enable Gluetun in your values.yaml" }}
{{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: joal
  namespace: default
spec:
  ports:
    - protocol: TCP
      name: joal
      port: 12345
  selector:
    app: joal

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: joal
  namespace: default
  annotations:
    homer.service.name: Media
    homer.item.logo: "https://raw.githubusercontent.com/anthonyraymond/joal/cad5df11990d4304476d574484003ccbcdd0b700/src/main/resources/public/favicon.ico"
spec:
  tls:
    - hosts:
        - joal.{{ .Values.fqdn }}
      secretName: "{{ .Values.fqdn }}-tls"
  rules:
    - host: joal.{{ .Values.fqdn }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: joal
                port:
                  name: joal

---
apiVersion: v1
kind: Secret
metadata:
  name: joal
  namespace: default
type: Opaque
# stringData:
#   token: "somepass"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: joal
  namespace: default
spec:
  storageClassName: "local-path-retain"
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: joal
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: joal
  policyTypes:
    - Egress
  egress:
    - to:
        - podSelector:
            matchLabels:
              app: gluetun

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: joal
  namespace: default
  labels:
    app: joal
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: joal
  template:
    metadata:
      labels:
        app: joal
    spec:
      containers:
        - name: app
          image: anthonyraymond/joal:2.1.36
          command: ["bash"]
          args: ["-c", "java -jar /joal/joal.jar --server.port=12345 --joal-conf=/data --spring.main.web-environment=true --joal.ui.path.prefix=app --joal.ui.secret-token=$$SECRET_TOKEN"]
          resources:
            requests:
              memory: 128Mi
              cpu: 250m
            limits:
              memory: 1Gi
          ports:
            - name: joal
              containerPort: 12345
          env:
            - name: SECRET_TOKEN
              valueFrom:
                secretKeyRef:
                  name: joal
                  key: token
          volumeMounts:
            - name: joal-config
              mountPath: /data
      volumes:
        - name: joal-config
          persistentVolumeClaim:
            claimName: joal
{{- end }}
