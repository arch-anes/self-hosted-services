{{- if and (not .Values.disableAllApplications) .Values.applications.radarr.enabled }}
{{- if not .Values.applications.postgresql.enabled }}
{{- fail "Radarr requires PostgreSQL to be enabled. Please enable PostgreSQL in your values.yaml" }}
{{- end }}
---
apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: radarr
  namespace: "{{ .Values.applicationsNamespace }}"
spec:
  chart: oci://oci.trueforge.org/truecharts/radarr
  version: 25.3.0
  targetNamespace: "{{ .Values.applicationsNamespace }}"
  valuesContent: |-
    workload:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        podSpec:
          affinity:
            podAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: app
                        operator: In
                        values:
                          - jellyfin
                  topologyKey: "kubernetes.io/hostname"
          containers:
            main:
              securityContext:
                runAsUser: 1000
                runAsGroup: 1000
              env:
                RADARR__APP__THEME: dark
                RADARR__AUTH__METHOD: Forms
                RADARR__AUTH__REQUIRED: Enabled
                RADARR__POSTGRES__HOST: postgresql-primary
                RADARR__POSTGRES__PORT: "5432"
                RADARR__POSTGRES__MAINDB: radarr_main
                RADARR__POSTGRES__LOGDB: radarr_log
                RADARR__POSTGRES__USER: radarr
                RADARR__AUTH__APIKEY:
                  secretKeyRef:
                    name: arr
                    key: radarr_api_key
                    expandObjectName: false
                RADARR__POSTGRES__PASSWORD:
                  secretKeyRef:
                    name: postgresql-pguser-radarr
                    key: password
                    expandObjectName: false
            exportarr:
              env:
                API_KEY:
                  secretKeyRef:
                    name: arr
                    key: radarr_api_key
                    expandObjectName: false
    resources:
      requests:
        memory: 500Mi
        cpu: 250m
      limits:
        memory: 1Gi
        cpu: null
    global:
      traefik:
        fixedMiddlewares: []
    ingress:
      main:
        enabled: true
        annotations:    
          homer.service.name: Arr
          homer.item.logo: "https://raw.githubusercontent.com/Radarr/Radarr/e4429d2919f73d8ffd1389614c74e58b9a447c50/Logo/256.png"
        hosts:
          - host: radarr.{{ .Values.fqdn }}
            paths:
              - path: /
        tls:
          - secretName: "{{ .Values.fqdn }}-tls"
            hosts:
              - radarr.{{ .Values.fqdn }}
    persistence:
      config:
        type: emptyDir
      multimedia:
        enabled: true
        type: pvc
        mountPath: /jellyfin
        existingClaim: multimedia
    metrics:
      main:
        enabled: {{ include "metrics.enabled" . }}
        endpoints:
          - port: metrics
            path: /metrics
            relabelings:
              - action: replace
                # Stable “instance” = app.kubernetes.io/instance (radarr|sonarr|prowlarr|bazarr)
                sourceLabels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_label_app_kubernetes_io_instance]
                separator: ":"
                replacement: "$1$2"
                targetLabel: instance
{{- end }}
