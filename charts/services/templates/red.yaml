{{- if and (not .Values.disableAllApplications) .Values.applications.red.enabled }}
---
apiVersion: v1
kind: Service
metadata:
  name: red
  namespace: default
spec:
  ports:
    - protocol: TCP
      name: web
      port: 80
  selector:
    app: red

---
apiVersion: v1
kind: Secret
metadata:
  name: red
  namespace: default
type: Opaque
# stringData:
#   token: "sometoken"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: red
  namespace: default
  labels:
    app: red
  annotations:
    keel.sh/policy: force
    keel.sh/matchTag: "true"
    keel.sh/trigger: poll
    keel.sh/pollSchedule: "@daily"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: red
  template:
    metadata:
      labels:
        app: red
    spec:
      nodeSelector:
        # Schedule only on NAS nodes
        nas: "true"
      containers:
        - name: app
          image: phasecorex/red-discordbot:full
          imagePullPolicy: Always
          resources:
            requests:
              memory: 512Mi
              cpu: 1000m
            limits:
              memory: 1Gi
          env:
            - name: TOKEN
              valueFrom:
                secretKeyRef:
                  name: red
                  key: token
            - name: PREFIX
              value: "-"
          volumeMounts:
            - name: data
              mountPath: /data
      volumes:
        - name: data
          hostPath:
            path: "{{ .Values.storageLocation }}/red/data"
{{- end }}
