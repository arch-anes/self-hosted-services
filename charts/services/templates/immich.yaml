{{- if and (not .Values.disableAllApplications) .Values.applications.immich.enabled }}
{{- if not .Values.applications.postgresql.enabled }}
{{- fail "Immich requires PostgreSQL to be enabled. Please enable PostgreSQL in your values.yaml" }}
{{- end }}
{{- if not .Values.applications.redis.enabled }}
{{- fail "Immich requires Redis to be enabled. Please enable Redis in your values.yaml" }}
{{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: immich
  namespace: default
spec:
  ports:
    - protocol: TCP
      name: web
      port: 2283
  selector:
    app: immich

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: immich
  namespace: default
  annotations:
    homer.service.name: Media
    homer.item.name: immich
    homer.item.logo: "https://immich.app/img/immich-logo-stacked-dark.svg"
spec:
  tls:
    - hosts:
        - immich.{{ .Values.fqdn }}
      secretName: "{{ .Values.fqdn }}-tls"
  rules:
    - host: immich.{{ .Values.fqdn }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: immich
                port:
                  name: web

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: immich-env
  namespace: default
data:
  IMMICH_PORT: "2283"
  REDIS_HOSTNAME: "redis-master"
  REDIS_PORT: "6379"
  DB_HOSTNAME: "postgresql-primary"
  DB_PORT: "5432"
  DB_DATABASE_NAME: "immich"
  DB_USERNAME: "immich"
  DB_VECTOR_EXTENSION: "vectorchord"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: immich
  namespace: default
  labels:
    app: immich
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: immich
  template:
    metadata:
      labels:
        app: immich
    spec:
      nodeSelector:
        # Schedule only on NAS nodes
        nas: "true"
      containers:
        - name: app
          image: ghcr.io/immich-app/immich-server:v1.137.3
          resources:
            requests:
              memory: 128Mi
              cpu: 1000m
            limits:
              memory: 2Gi
          envFrom:
            - configMapRef:
                name: immich-env
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis
                  key: redis-password
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgresql-pguser-immich
                  key: password
            - name: IMMICH_WORKERS_INCLUDE
              value: "api"
          ports:
            - name: web
              containerPort: 2283
          volumeMounts:
            - name: data
              mountPath: /usr/src/app/upload
        - name: jobs
          image: ghcr.io/immich-app/immich-server:v1.137.3
          resources:
            requests:
              memory: 128Mi
              cpu: 250m
            limits:
              memory: 4Gi
              {{- $gpuVendor := .Values.applications.immich.gpu_vendor }}
              {{- if eq $gpuVendor "intel" }}
                {{- if not .Values.applications.intel_gpu.enabled }}
                  {{- fail "Intel GPU is selected for Immich but intel_gpu is not enabled" }}
                {{- end }}
              gpu.intel.com/i915: 1
              {{- else if eq $gpuVendor "nvidia" }}
                {{- if not .Values.applications.nvidia_gpu.enabled }}
                  {{- fail "NVIDIA GPU is selected for Immich but nvidia_gpu is not enabled" }}
                {{- end }}
              nvidia.com/gpu: 1
              {{- else if eq $gpuVendor "amd" }}
                {{- if not .Values.applications.amd_gpu.enabled }}
                  {{- fail "AMD GPU is selected for Immich but amd_gpu is not enabled" }}
                {{- end }}
              amd.com/gpu: 1
              {{- else if $gpuVendor }}
                {{- fail (printf "Unknown GPU vendor '%s' selected for Immich" $gpuVendor) }}
              {{- end }}
          envFrom:
            - configMapRef:
                name: immich-env
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis
                  key: redis-password
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgresql-pguser-immich
                  key: password
            - name: IMMICH_WORKERS_EXCLUDE
              value: "api"
          volumeMounts:
            - name: data
              mountPath: /usr/src/app/upload
      volumes:
        - name: data
          hostPath:
            path: "{{ .Values.storageLocation }}/immich/data"
---
apiVersion: v1
kind: Service
metadata:
  name: immich-machine-learning
  namespace: default
spec:
  ports:
    - protocol: TCP
      name: web
      port: 3003
  selector:
    app: immich-machine-learning

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: immich-machine-learning
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: immich-machine-learning
  namespace: default
  labels:
    app: immich-machine-learning
spec:
  replicas: 1
  selector:
    matchLabels:
      app: immich-machine-learning
  template:
    metadata:
      labels:
        app: immich-machine-learning
    spec:
      containers:
        - name: app
          image: ghcr.io/immich-app/immich-machine-learning:v1.137.3
          resources:
            requests:
              memory: 128Mi
              cpu: 250m
            limits:
              memory: 4Gi
          env:
            - name: IMMICH_PORT
              value: "3003"
          ports:
            - name: web
              containerPort: 3003
          volumeMounts:
            - name: cache
              mountPath: /cache
              subPath: cache
      volumes:
        - name: cache
          persistentVolumeClaim:
            claimName: immich-machine-learning
{{- end }}
