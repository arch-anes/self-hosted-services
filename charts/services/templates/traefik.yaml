{{- if .Values.primaryTenant }}
# ---
# apiVersion: v1
# kind: Secret
# metadata:
#   name: cluster-admin-credentials
#   namespace: kube-system
# type: Opaque
# stringData:
#   credentials: "admin:$2y$12$8KtQ4SQb6QpebcgYvMPjwOv3Jz9ojkNq8FVWZmk5q1BW9BoEX2aAy" # admin:admin by default, bcrypted password: https://bcrypt-generator.com/

{{- if and (not .Values.disableAllApplications) .Values.applications.crowdsec.enabled }}
# ---
# apiVersion: v1
# kind: Secret
# metadata:
#   name: crowdsec
#   namespace: kube-system
# type: Opaque
# stringData:
#   enroll_key: "somekey"
#   bouncer_key: "somekey"
#   csLapiSecret: "somesecret"
#   registrationToken: "sometoken"
{{- end }}

---
apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: traefik
  namespace: kube-system
spec:
  chart: traefik
  repo: https://traefik.github.io/charts
  version: 37.1.1
  targetNamespace: kube-system
  valuesContent: |-
    extraObjects:
      - apiVersion: traefik.io/v1alpha1
        kind: Middleware
        metadata:
          name: cluster-admin-authentication
          namespace: kube-system
        spec:
          basicAuth:
            secret: "cluster-admin-credentials"
      - apiVersion: traefik.io/v1alpha1
        kind: Middleware
        metadata:
          name: traefik-websecure
          namespace: kube-system
        spec:
          headers:
            browserXssFilter: true
            stsPreload: true
            stsIncludeSubdomains: true
            forceSTSHeader: true
            stsSeconds: 15552000
      - apiVersion: traefik.io/v1alpha1
        kind: Middleware
        metadata:
          name: intranet-allowlist
          namespace: kube-system
        spec:
          ipAllowList:
            sourceRange:
              {{- concat .Values.localIpRanges .Values.tailscaleIpRanges | toYaml | nindent 14 }}
{{- if and (not .Values.disableAllApplications) .Values.applications.crowdsec.enabled }}
      - apiVersion: traefik.io/v1alpha1
        kind: Middleware
        metadata:
          name: crowdsec
          namespace: kube-system
        spec:
          plugin:
            crowdsec-bouncer-traefik-plugin:
              enabled: true
              crowdsecAppsecFailureBlock: false
              crowdsecAppsecUnreachableBlock: false
              crowdsecMode: stream
              crowdsecLapiScheme: http
              crowdsecLapiHost: crowdsec-service.kube-system.svc.cluster.local:8080
              crowdsecLapiKeyFile: /etc/traefik/secrets/crowdsec/bouncer_key
              redisCacheEnabled: true
              redisCacheHost: redis-master.{{ .Values.applicationsNamespace }}.svc.cluster.local:6379
              redisCachePasswordFile: /etc/traefik/secrets/redis/redis-password
              redisCacheDatabase: "3"
              redisUnreachableBlock: false
              forwardedHeadersTrustedIPs:
                {{- concat .Values.localIpRanges .Values.cloudFlareIpRanges | toYaml | nindent 16 }}
              clientTrustedIPs:
                {{- concat .Values.localIpRanges .Values.tailscaleIpRanges | toYaml | nindent 16 }}
    experimental:
      plugins:
        crowdsec-bouncer-traefik-plugin:
          moduleName: "github.com/maxlerebourg/crowdsec-bouncer-traefik-plugin"
          version: "v1.4.5"
    volumes:
      - name: crowdsec
        mountPath: /etc/traefik/secrets/crowdsec/
        type: secret
      - name: redis
        mountPath: /etc/traefik/secrets/redis/
        type: secret
    env:
      # work around trace setup error "error detecting resource: user: Current requires cgo or $USER set in environment"
      # https://github.com/traefik/traefik/issues/11992#issuecomment-3178084711
      - name: USER
        value: nobody
    deployment:
      annotations:
        reloader.stakater.com/auto: "true"
{{- end }}
    logs:
      access:
        enabled: true
        addInternals: true
        fields:
          headers:
            defaultmode: keep
{{- if and (not .Values.disableAllApplications) .Values.applications.prometheus.enabled }}
    metrics:
      addInternals: true
      prometheus:
        service:
          enabled: true
        serviceMonitor:
          enabled: true
{{- end }}
{{- if and (not .Values.disableAllApplications) .Values.applications.tempo.enabled }}
    tracing:
      capturedRequestHeaders:
        - "X-Real-Ip"
        - "X-Forwarded-For"
        - "True-Client-IP"
        - "CF-Connecting-IP"
      otlp:
        enabled: true
        http:
          enabled: true
          endpoint: http://tempo.kube-system.svc.cluster.local:4318/v1/traces
{{- end }}
    nodeSelector:
      public: "true"
    ingressRoute:
      healthcheck:
        enabled: true
        annotations:
          homer.item.excluded: "true"
      dashboard:
        enabled: true
        annotations:
          homer.service.name: Monitoring
          homer.item.name: "Traefik Dashboard"
          homer.item.logo: "https://raw.githubusercontent.com/traefik/traefik/aa8eb1af6eb5457516169315676ec22f968e727d/webui/public/app-logo-128x128.png"
        matchRule: Host(`traefik.{{ .Values.fqdn }}`)
        middlewares:
          - name: kube-system-intranet-allowlist@kubernetescrd
          - name: kube-system-cluster-admin-authentication@kubernetescrd
        entryPoints:
          - web
          - websecure
        tls:
          secretName: "{{ .Values.fqdn }}-tls"
    providers:
      kubernetesCRD:
        allowCrossNamespace: true
    service:
      spec:
        externalTrafficPolicy: Local
    ports:
      traefik:
        expose:
          default: true
      web:
        redirections:
          entryPoint:
            to: websecure
            scheme: https
            permanent: true
        proxyProtocol:
          trustedIPs:
            {{- concat .Values.localIpRanges .Values.cloudFlareIpRanges | toYaml | nindent 12 }}
        forwardedHeaders:
          trustedIPs:
            {{- concat .Values.localIpRanges .Values.cloudFlareIpRanges | toYaml | nindent 12 }}
      websecure:
        proxyProtocol:
          trustedIPs:
            {{- concat .Values.localIpRanges .Values.cloudFlareIpRanges | toYaml | nindent 12 }}
        forwardedHeaders:
          trustedIPs:
            {{- concat .Values.localIpRanges .Values.cloudFlareIpRanges | toYaml | nindent 12 }}
        transport:
          respondingTimeouts:
            readTimeout: 0
        middlewares:
          - kube-system-traefik-websecure@kubernetescrd
{{- if and (not .Values.disableAllApplications) .Values.applications.crowdsec.enabled }}
          - kube-system-crowdsec@kubernetescrd
{{- end }}
        tls:
          enabled: true
    resources:
      requests:
        memory: 512Mi
        cpu: 500m
      limits:
        memory: 512Mi
    autoscaling:
      enabled: true
      minReplicas: 1
      maxReplicas: 10
      metrics:
        - type: Resource
          resource:
            name: memory
            target:
              type: Utilization
              averageUtilization: 60
{{- end }}
