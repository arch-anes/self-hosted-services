{{- if .Values.applications.transmission.enabled }}
{{- if not .Values.applications.redis.enabled }}
{{- fail "Transmission requires Gluetun to be enabled. Please enable Gluetun in your values.yaml" }}
{{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: transmission
  namespace: default
spec:
  ports:
    - protocol: TCP
      name: transmission
      port: 9091
  selector:
    app: transmission

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: transmission
  namespace: default
  annotations:
    homer.service.name: Media
    homer.item.logo: "https://raw.githubusercontent.com/transmission/transmission/0ce4adf07ce4b6cfabf81e2d027f96197bb9a305/web/assets/img/logo.png"
spec:
  tls:
    - hosts:
        - transmission.{{ .Values.fqdn }}
      secretName: "{{ .Values.fqdn }}-tls"
  rules:
    - host: transmission.{{ .Values.fqdn }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: transmission
                port:
                  name: transmission

---
apiVersion: v1
kind: Secret
metadata:
  name: transmission
  namespace: default
type: Opaque
# stringData:
#   username: "someuser"
#   password: "somepass"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: transmission
  namespace: default
spec:
  storageClassName: "local-path-retain"
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: transmission-scripts
  namespace: default
data:
  extract-files.sh: |
    #!/bin/bash

    # Transmission completion script for automatic extraction

    find "${TR_TORRENT_DIR}" -type f \( -iname "*.rar" -o -iname "*.zip" -o -iname "*.7z" \) | while read -r file; do
        file_dir=$(dirname "${file}")
        case "${file,,}" in
            *.rar)
                unrar x -o- "${file}" "${file_dir}" &>/dev/null
                ;;
            *.zip)
                unzip -o "${file}" -d "${file_dir}" &>/dev/null
                ;;
            *.7z)
                7z x -aoa "${file}" -o"${file_dir}" &>/dev/null
                ;;
        esac
    done

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: transmission
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: transmission
  policyTypes:
    - Egress
  egress:
    - to:
        - podSelector:
            matchLabels:
              app: gluetun

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: transmission
  namespace: default
  labels:
    app: transmission
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: transmission
  template:
    metadata:
      labels:
        app: transmission
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - jellyfin
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: app
          image: lscr.io/linuxserver/transmission:4.0.6
          resources:
            requests:
              memory: 128Mi
              cpu: 1000m
            limits:
              memory: 2Gi
          ports:
            - name: transmission
              containerPort: 9091
          env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: USER
              valueFrom:
                secretKeyRef:
                  name: transmission
                  key: username
            - name: PASS
              valueFrom:
                secretKeyRef:
                  name: transmission
                  key: password
          volumeMounts:
            - name: downloads
              mountPath: /downloads
            - name: transmission-config
              mountPath: /config
            - name: transmission-scripts
              mountPath: /scripts
      volumes:
        - name: downloads
          hostPath:
            path: "{{ .Values.storageLocation }}/Multimedia/Downloads"
        - name: transmission-config
          persistentVolumeClaim:
            claimName: transmission
        - name: transmission-scripts
          configMap:
            name: transmission-scripts
            defaultMode: 0755
{{- end }}
