{{- if and .Values.primaryTenant (not .Values.disableAllApplications) .Values.applications.crowdsec.enabled }}
apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: crowdsec
  namespace: kube-system
spec:
  chart: crowdsec
  repo: https://crowdsecurity.github.io/helm-charts
  version: 0.20.1
  targetNamespace: kube-system
  valuesContent: |-
    container_runtime: containerd
    agent:
      podAnnotations:
        descheduler.alpha.kubernetes.io/evict: "true"
      acquisition:
        - namespace: kube-system
          podName: traefik-*
          program: traefik
      env:
        - name: PARSERS
          value: "crowdsecurity/cri-logs crowdsecurity/jellyfin-whitelist crowdsecurity/jellyseerr-whitelist crowdsecurity/nextcloud-whitelist"
        - name: COLLECTIONS
          value: "crowdsecurity/traefik crowdsecurity/http-cve"
      resources:
        limits:
          memory: 250Mi
        requests:
          cpu: 500m
          memory: 250Mi
{{- if and (not .Values.disableAllApplications) .Values.applications.prometheus.enabled }}
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
{{- end }}
      nodeSelector:
        public: "true"
    secrets:
      externalSecret:
        name: crowdsec
    lapi:
      replicas: 2
      storeCAPICredentialsInSecret: true
      strategy:
        type: RollingUpdate
      persistentVolume:
        data:
          enabled: false
        config:
          enabled: false
      env:
        - name: ENROLL_KEY
          valueFrom:
            secretKeyRef:
              name: crowdsec
              key: enroll_key
        - name: BOUNCER_KEY_traefik
          valueFrom:
            secretKeyRef:
              name: crowdsec
              key: bouncer_key
        - name: ENROLL_INSTANCE_NAME
          value: "k3s_cluster"
        - name: ENROLL_TAGS
          value: "k3s linux"
      resources:
        limits:
          memory: 500Mi
        requests:
          cpu: 500m
          memory: 500Mi
{{- if and (not .Values.disableAllApplications) .Values.applications.prometheus.enabled }}
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
{{- end }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  k8s-app: crowdsec
                  type: lapi
{{- end }}
