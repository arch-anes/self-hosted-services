---
apiVersion: v1
kind: Secret
metadata:
  name: kubernetes-dashboard-admin
  namespace: kube-system
  annotations:
    kubernetes.io/service-account.name: admin-user
type: kubernetes.io/service-account-token
---
apiVersion: v1
kind: Secret
metadata:
  name: postgresql-backup-credentials
  namespace: default
type: Opaque
stringData:
  s3.conf: |-
    [global]
    repo1-s3-key="some-id"
    repo1-s3-key-secret="some-key"
    repo1-cipher-pass="some-encryption-key"
---
apiVersion: v1
kind: Secret
metadata:
  name: redis
  namespace: default
  annotations:
    reflector.v1.k8s.emberstack.com/reflection-auto-enabled: "true"
    reflector.v1.k8s.emberstack.com/reflection-allowed: "true"
    reflector.v1.k8s.emberstack.com/reflection-allowed-namespaces: "kube-system"
type: Opaque
stringData:
  redis-password: "somepassword"
---
apiVersion: v1
kind: Secret
metadata:
  name: smtp
  namespace: default
type: Opaque
stringData:
  hostname: "somehost"
  username: "someuser"
  password: "somepass"
---
apiVersion: v1
kind: Secret
metadata:
  name: cluster-admin-credentials
  namespace: kube-system
type: Opaque
stringData:
  credentials: "admin:$2y$12$8KtQ4SQb6QpebcgYvMPjwOv3Jz9ojkNq8FVWZmk5q1BW9BoEX2aAy"
---
apiVersion: v1
kind: Secret
metadata:
  name: arr
  namespace: default
type: Opaque
stringData:
  prowlarr_api_key: "some_key"
  tdarr_api_key: "some_key"
  radarr_api_key: "some_key"
  sonarr_api_key: "some_key"
  bazarr_api_key: "some_key"
  bazarr_admin_password_hash: "some_pass_hash"
  betaseries_api_key: "some_key"
  anidb_api_client: "some_client"
---
apiVersion: v1
kind: Secret
metadata:
  name: example.org-cloudflare
  namespace: default
  annotations:
    reflector.v1.k8s.emberstack.com/reflection-auto-enabled: "true"
    reflector.v1.k8s.emberstack.com/reflection-allowed: "true"
    reflector.v1.k8s.emberstack.com/reflection-allowed-namespaces: "kube-system"
type: Opaque
stringData:
  token: "sometoken"
---
apiVersion: v1
kind: Secret
metadata:
  name: epicgames-freegames
  namespace: default
type: Opaque
stringData:
  epic_email: "someemail"
  gotify_token: "sometoken"
---
apiVersion: v1
kind: Secret
metadata:
  name: gha-runner-scale-set
  namespace: default
  annotations:
    reflector.v1.k8s.emberstack.com/reflection-auto-enabled: "true"
    reflector.v1.k8s.emberstack.com/reflection-allowed: "true"
    reflector.v1.k8s.emberstack.com/reflection-allowed-namespaces: "gha-runner-.*"
type: Opaque
stringData:
  github_token: ""
---
apiVersion: v1
kind: Secret
metadata:
  name: miniflux
  namespace: default
type: Opaque
stringData:
  admin_username: "someuser"
  admin_password: "somepass"
---
apiVersion: v1
kind: Secret
metadata:
  name: nodemation
  namespace: default
type: Opaque
stringData:
  encryption_key: "somekey"

---
apiVersion: v1
kind: Secret
metadata:
  name: obico
  namespace: default
type: Opaque
stringData:
  django_secret_key: "some_key"
---
apiVersion: v1
kind: Secret
metadata:
  name: pgadmin4
  namespace: default
type: Opaque
stringData:
  password: "somepassword"
---
apiVersion: v1
kind: Secret
metadata:
  name: red
  namespace: default
type: Opaque
stringData:
  token: "sometoken"
---
apiVersion: v1
kind: Secret
metadata:
  name: speedtest-tracker
  namespace: default
type: Opaque
stringData:
  app_key: "somekey"
---
apiVersion: v1
kind: Secret
metadata:
  name: tandoor
  namespace: default
type: Opaque
stringData:
  django_secret_key: "some_key"
---
apiVersion: v1
kind: Secret
metadata:
  name: gluetun
  namespace: default
type: Opaque
stringData:
  vpn_service_provider: "someprovider"
  wireguard_private_key: "somekey"
  server_countries: "somecountry1,somecountry2"
---
apiVersion: v1
kind: Secret
metadata:
  name: transmission
  namespace: default
type: Opaque
stringData:
  username: "someuser"
  password: "somepass"
