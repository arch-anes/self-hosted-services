# code: language=ansible
---

- name: Setup firewall
  ansible.builtin.import_role:
    name: firewall
  vars:
    rules:
      - { to_port: 6443, proto: tcp, rule: allow, comment: "Kubernetes API Server" }
      - { to_port: 8472, proto: udp, rule: allow, comment: "Required only for Flannel VXLAN" }
      - { to_port: 10250, proto: tcp, rule: allow, comment: "Kubelet metrics" }
      - { to_port: "2379:2380", proto: tcp, rule: allow, comment: "Required only for HA with embedded etcd" }
  when: not skip_firewall

- name: Set k3s node facts
  ansible.builtin.set_fact:
    advertised_address: "{{ private_ip | default(ansible_wg0.ipv4.address) }}"

- name: Set k3s node facts
  ansible.builtin.set_fact:
    k3s_runtime_config:
      with-node-id: true
      node-ip: "{{ advertised_address }}"
      node-external-ip: "{{ advertised_address }}"
      flannel-iface: "wg0"
      node-label: "{{ labels }}"

- name: Set k3s node facts (temporary fix)
  ansible.builtin.set_fact:
    k3s_agent: "{{ k3s_runtime_config }}"
    k3s_server: "{{ k3s_runtime_config }}"

- name: Elect previously running control delegate
  block:
    - name: Populate service facts
      ansible.builtin.service_facts:
      become: true

    - name: Mark eligible nodes
      ansible.builtin.set_fact:
        k3s_eligible_control_node: "{{ (ansible_facts.services['k3s.service'].state | default('')) == 'running' and (k3s_control_node | default(false)) }}"

    - name: Select potential control node if any
      ansible.builtin.set_fact:
        k3s_potential_control_node: "{{ ((((hostvars | dict2items) | selectattr('value.k3s_eligible_control_node', 'true')) | first).key) | default('') }}"
      run_once: true

    - name: Elect control delegate
      ansible.builtin.set_fact:
        k3s_control_delegate: "{{ k3s_potential_control_node }}"
      run_once: true
      when: k3s_potential_control_node != ''  # noqa empty-string-compare

- name: Install and deploy k3s
  ansible.builtin.import_role:
    name: xanmanning.k3s
  vars:
    k3s_release_version: v1.26
    k3s_become: true
    k3s_etcd_datastore: true
    k3s_use_unsupported_config: true
  become: true
