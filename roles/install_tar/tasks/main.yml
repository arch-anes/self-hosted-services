# code: language=ansible
---

- name: "Check if {{ install_tar_binary_name }} is installed"  # noqa: name[template]
  ansible.builtin.command: "which {{ install_tar_binary_name }}"
  register: binary_existence_result
  changed_when: false
  ignore_errors: true

- name: Install {{ install_tar_binary_name }}
  become: true
  when: not skip_binary_update or binary_existence_result.rc != 0
  block:
    - name: Download {{ install_tar_binary_name }}
      ansible.builtin.get_url:
        url: "{{ install_tar_url }}"
        mode: '644'
        dest: "/tmp/{{ install_tar_binary_name }}.tar"

    - name: Create temp directory for extraction
      ansible.builtin.tempfile:
        state: directory
        suffix: "{{ install_tar_binary_name }}"
      register: tempdir

    - name: Extract {{ install_tar_binary_name }}
      ansible.builtin.unarchive:
        remote_src: true
        src: "/tmp/{{ install_tar_binary_name }}.tar"
        dest: "{{ tempdir.path }}"

    - name: Find the binary in extracted content
      ansible.builtin.find:
        paths: "{{ tempdir.path }}"
        patterns: "{{ install_tar_binary_name }}"
        recurse: true
        file_type: file
      register: found_binary

    - name: Fail if binary not found
      ansible.builtin.fail:
        msg: "Binary '{{ install_tar_binary_name }}' not found in archive"
      when: found_binary.matched == 0

    - name: Copy binary to /usr/local/bin
      ansible.builtin.copy:
        remote_src: true
        src: "{{ item.path }}"
        dest: "/usr/local/bin/{{ install_tar_binary_name }}"
        mode: '0755'
      with_items: "{{ found_binary.files }}"
      when: found_binary.matched > 0
